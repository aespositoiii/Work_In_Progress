CREATE TABLE employee (
    emp_id INT PRIMARY KEY,
    first_name VARCHAR(40),
    last_name VARCHAR(40),
    birth_day DATE,
    sex VARCHAR(1),
    salary INT,
    super_id INT,
    branch_id INT
);



DROP TABLE employee;

CREATE TABLE branch (
    branch_id INT PRIMARY KEY,
    branch_name VARCHAR(40),
    mgr_id INT,
    mgr_start_date DATE,
    FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL
);

ALTER TABLE employee
ADD FOREIGN KEY(branch_id)
REFERENCES branch(branch_id)
ON DELETE SET NULL;

ALTER TABLE employee
ADD FOREIGN KEY(super_id)
REFERENCES employee(emp_id)
ON DELETE SET NULL;

CREATE TABLE client (
    client_id INT PRIMARY KEY,
    client_name VARCHAR(40),
    branch_id INT,
    FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE SET NULL
);

CREATE TABLE works_with (
    emp_id INT,
    client_id INT,
    total_sales INT,
    PRIMARY KEY(emp_id, client_id),
    FOREIGN KEY(emp_id) REFERENCES employee(emp_id) ON DELETE CASCADE,
    FOREIGN KEY(client_id) REFERENCES client(client_id) ON DELETE CASCADE
);

CREATE TABLE branch_supplier (
    branch_id INT,
    supplier_name VARCHAR(40),
    supply_type VARCHAR(40),
    PRIMARY KEY(branch_id, supplier_name),
    FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------

-- Corporate
INSERT INTO employee VALUES(100, 'David', 'Wallace', '1967-11-17', 'M', 250000, NULL, NULL);

INSERT INTO branch VALUES(1, 'Corporate', 100, '2006-02-09');

UPDATE employee
SET branch_id = 1
WHERE emp_id = 100;

INSERT INTO employee VALUES(101, 'Jan', 'Levinson', '1961-05-11', 'F', 110000, 100, 1);

-- Scranton
INSERT INTO employee VALUES(102, 'Michael', 'Scott', '1964-03-15', 'M', 75000, 100, NULL);

INSERT INTO branch VALUES(2, 'Scranton', 102, '1992-04-06');

UPDATE employee
SET branch_id = 2
WHERE emp_id = 102;

INSERT INTO employee VALUES(103, 'Angela', 'Martin', '1971-06-25', 'F', 63000, 102, 2);
INSERT INTO employee VALUES(104, 'Kelly', 'Kapoor', '1980-02-05', 'F', 55000, 102, 2);
INSERT INTO employee VALUES(105, 'Stanley', 'Hudson', '1958-02-19', 'M', 69000, 102, 2);

-- Stamford
INSERT INTO employee VALUES(106, 'Josh', 'Porter', '1969-09-05', 'M', 78000, 100, NULL);

INSERT INTO branch VALUES(3, 'Stamford', 106, '1998-02-13');

UPDATE employee
SET branch_id = 3
WHERE emp_id = 106;

INSERT INTO employee VALUES(107, 'Andy', 'Bernard', '1973-07-22', 'M', 65000, 106, 3);
INSERT INTO employee VALUES(108, 'Jim', 'Halpert', '1978-10-01', 'M', 71000, 106, 3);


-- BRANCH SUPPLIER
INSERT INTO branch_supplier VALUES(2, 'Hammer Mill', 'Paper');
INSERT INTO branch_supplier VALUES(2, 'Uni-ball', 'Writing Utensils');
INSERT INTO branch_supplier VALUES(3, 'Patriot Paper', 'Paper');
INSERT INTO branch_supplier VALUES(2, 'J.T. Forms & Labels', 'Custom Forms');
INSERT INTO branch_supplier VALUES(3, 'Uni-ball', 'Writing Utensils');
INSERT INTO branch_supplier VALUES(3, 'Hammer Mill', 'Paper');
INSERT INTO branch_supplier VALUES(3, 'Stamford Lables', 'Custom Forms');

-- CLIENT
INSERT INTO client VALUES(400, 'Dunmore Highschool', 2);
INSERT INTO client VALUES(401, 'Lackawana Country', 2);
INSERT INTO client VALUES(402, 'FedEx', 3);
INSERT INTO client VALUES(403, 'John Daly Law, LLC', 3);
INSERT INTO client VALUES(404, 'Scranton Whitepages', 2);
INSERT INTO client VALUES(405, 'Times Newspaper', 3);
INSERT INTO client VALUES(406, 'FedEx', 2);

-- WORKS_WITH
INSERT INTO works_with VALUES(105, 400, 55000);
INSERT INTO works_with VALUES(102, 401, 267000);
INSERT INTO works_with VALUES(108, 402, 22500);
INSERT INTO works_with VALUES(107, 403, 5000);
INSERT INTO works_with VALUES(108, 403, 12000);
INSERT INTO works_with VALUES(105, 404, 33000);
INSERT INTO works_with VALUES(107, 405, 26000);
INSERT INTO works_with VALUES(102, 406, 15000);
INSERT INTO works_with VALUES(105, 406, 130000);

---------PRACTICE-----------

SELECT * FROM client 
ORDER BY client_id;

SELECT * FROM works_with 
ORDER BY emp_id;

SELECT * FROM employee 
ORDER BY emp_id;

SELECT * FROM branch 
ORDER BY branch_id;

SELECT * FROM employee 
ORDER BY salary DESC;

SELECT * FROM employee 
ORDER BY sex, last_name, first_name ;

SELECT * FROM employee 
LIMIT 5 ;

SELECT last_name AS surname, first_name AS forename 
FROM employee ;

SELECT DISTINCT sex 
FROM employee;

SELECT DISTINCT supply_type 
FROM branch_supplier;

SELECT COUNT(emp_id) 
FROM employee;

SELECT COUNT(super_id) 
FROM employee;

SELECT COUNT(emp_id) 
FROM employee 
WHERE sex = 'M' AND birth_day < '1975-12-31';

SELECT last_name, first_name, birth_day 
FROM employee 
WHERE sex = 'M' AND birth_day < '1975-12-31' ORDER BY birth_day ASC;

SELECT AVG(salary) 
FROM employee;

SELECT AVG(salary) 
FROM employee WHERE sex = 'F';

SELECT SUM(salary) 
FROM employee;

SELECT COUNT(sex) AS 'Number', sex 
FROM employee GROUP BY sex;

SELECT emp_id, SUM(total_sales) 
FROM works_with GROUP BY emp_id ORDER BY SUM(total_sales) DESC;

SELECT client_id, SUM(total_sales) 
FROM works_with GROUP BY client_id ORDER BY SUM(total_sales) DESC;

SELECT * FROM branch_supplier 
WHERE supplier_name LIKE '%LABLES';

SELECT first_name, last_name, birth_day 
FROM employee WHERE birth_day LIKE '____-02%';

SELECT client_name 
FROM client 
WHERE client_name LIKE '%school%';

SELECT first_name FROM employee
UNION
SELECT branch_name FROM branch;

SELECT client_id, branch_id FROM client
UNION
SELECT supplier_name, branch_id FROM branch_supplier;

INSERT INTO branch VALUES(4, 'Buffalo', NULL, NULL);

SELECT employee.emp_id, employee.first_name, branch.branch_name
FROM employee 
JOIN branch ON employee.emp_id = branch.mgr_id;

SELECT employee.emp_id, employee.first_name, branch.branch_name
FROM employee 
JOIN branch ON employee.super_id = branch.mgr_id;

SELECT employee.emp_id, employee.first_name, branch.branch_name
FROM employee 
LEFT JOIN branch ON employee.super_id = branch.mgr_id;

SELECT employee.emp_id, employee.first_name, branch.branch_name
FROM branch 
RIGHT JOIN employee ON employee.emp_id = branch.mgr_id;

SELECT emp_id 
FROM works_with 
WHERE works_with.total_sales > 30000;

SELECT employee.first_name, employee.last_name 
FROM employee 
WHERE employee.emp_id IN (
    SELECT works_with.emp_id
    FROM works_with
    WHERE works_with.total_sales > 30000
) ;

SELECT clinet.client_name
FROM client
WHERE;

SELECT employee.emp_id
FROM employee
WHERE first_name = 'Michael' AND last_name = 'Scott';

SELECT branch.branch_id
FROM branch
WHERE branch.mgr_id = (
    SELECT employee.emp_id
    FROM employee
    WHERE first_name = 'Michael' AND last_name = 'Scott'
);

SELECT client.client_name
FROM client
WHERE client.branch_id = (
    SELECT branch.branch_id
    FROM branch
    WHERE branch.mgr_id = (
        SELECT employee.emp_id
        FROM employee
        WHERE first_name = 'Michael' AND last_name = 'Scott'
        LIMIT 1
    )
);

SELECT * FROM employee;

UPDATE employee
SET 
    sex = 'F',
    first_name = 'Josie'
WHERE 
    emp_id = 106;

---EXECUTE IN TERMINAL WITH 'mysql -u root -p' ---
    DELIMITER $$
        CREATE
        TRIGGER my_trigger BEFORE INSERT
        ON employee
        FOR EACH ROW BEGIN 
            IF NEW.salary > 100000 THEN
                INSERT INTO trigger_test VALUES('ADDED NEW SUPERVISOR');
            ELSEIF NEW.salary > 70000 THEN
                INSERT INTO trigger_test VALUES('ADDED SENIOR EMLPOYEE');
            ELSE
                INSERT INTO trigger_test VALUE('ADDED JUNIOR EMPLOYEE');
            END IF;
        END$$
            
        
    CREATE
        TRIGGER my_trigger2 BEFORE INSERT
        ON employee
        FOR EACH ROW BEGIN
            INSERT INTO trigger_test VALUES(NEW.first_name);
        END$$
DELIMITER ;

CREATE TABLE trigger_test(
    message VARCHAR(100)
);

INSERT INTO employee
VALUES(109, 'Oscar', 'Martinez', '1968-02-19', 'M', 72000, 106, 3);

INSERT INTO employee
VALUES(110, 'Kevin', 'Malone', '1978-02-19', 'M', 69000, 106, 3);

INSERT INTO employee
VALUES(111, 'Pam', 'Beesly', '1988-02-19', 'F', 69000, 106, 3);

SELECT * FROM trigger_test;